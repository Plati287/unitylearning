using UnityEngine;

public class EnemyAI : MonoBehaviour
{
    public Transform player;  // El jugador a seguir
    public float moveSpeed = 5f;  // Velocidad de movimiento
    public float rotationSpeed = 5f;  // Velocidad de rotación
    public float detectionRange = 10f;  // Rango de detección

    private Rigidbody rb;  // Componente Rigidbody

    void Start()
    {
        rb = GetComponent<Rigidbody>();  // Obtener el componente Rigidbody
    }

    void Update()
    {
        // Medir la distancia entre el enemigo y el jugador
        float distanceToPlayer = Vector3.Distance(transform.position, player.position);

        if (distanceToPlayer <= detectionRange)  // Si el jugador está dentro del rango de detección
        {
            MoveTowardsPlayer();
        }
    }

    void MoveTowardsPlayer()
    {
        // Calcular la dirección hacia el jugador
        Vector3 direction = (player.position - transform.position).normalized;

        // Rotar hacia el jugador
        Quaternion lookRotation = Quaternion.LookRotation(direction);
        transform.rotation = Quaternion.Slerp(transform.rotation, lookRotation, Time.deltaTime * rotationSpeed);

        // Aplicar movimiento hacia el jugador
        Vector3 moveDirection = direction * moveSpeed * Time.deltaTime;
        rb.MovePosition(rb.position + moveDirection);  // Mover el Rigidbody
    }
}
